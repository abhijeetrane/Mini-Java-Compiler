//
// Generated by JTB 1.2.2
//

package syntaxtree;

/**
 * Grammar production:
 * f0 -> <CLASS>
 * f1 -> ID()
 * f2 -> <EXTENDS>
 * f3 -> ID()
 * f4 -> <LBRACE>
 * f5 -> ( VarDecl() )*
 * f6 -> ( MethodDecl() )*
 * f7 -> <RBRACE>
 */
public class ClassDeclExtends implements Node {
   public NodeToken f0;
   public ID f1;
   public NodeToken f2;
   public ID f3;
   public NodeToken f4;
   public NodeListOptional f5;
   public NodeListOptional f6;
   public NodeToken f7;

   public ClassDeclExtends(NodeToken n0, ID n1, NodeToken n2, ID n3, NodeToken n4, NodeListOptional n5, NodeListOptional n6, NodeToken n7) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
      f7 = n7;
   }

   public ClassDeclExtends(ID n0, ID n1, NodeListOptional n2, NodeListOptional n3) {
      f0 = new NodeToken("class");
      f1 = n0;
      f2 = new NodeToken("extends");
      f3 = n1;
      f4 = new NodeToken("{");
      f5 = n2;
      f6 = n3;
      f7 = new NodeToken("}");
   }
   public Type accept(visitor.TypeVisitor v) {
    return v.visit(this);
 }
   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }
}

